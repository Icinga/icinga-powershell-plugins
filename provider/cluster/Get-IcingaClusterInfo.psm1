function Get-IcingaClusterInfo()
{
    $ClusterInformations = Get-IcingaWindowsInformation -ClassName MSCluster_Cluster -Namespace 'Root\MSCluster';
    $ClusterData         = @{
        'Caption'                                 = $ClusterInformations.Caption;
        'Description'                             = $ClusterInformations.Description;
        'InstallDate'                             = $ClusterInformations.InstallDate;
        'Name'                                    = $ClusterInformations.Name;
        'CreationClassName'                       = $ClusterInformations.CreationClassName;
        'NameFormat'                              = $ClusterInformations.NameFormat;
        'Status'                                  = $ClusterInformations.Status;
        'PrimaryOwnerContact'                     = $ClusterInformations.PrimaryOwnerContact;
        'PrimaryOwnerName'                        = $ClusterInformations.PrimaryOwnerName;
        'Roles'                                   = @();
        'Dedicated'                               = @();
        'IdentifyingDescriptions'                 = $ClusterInformations.IdentifyingDescriptions;
        'OtherIdentifyingInfo'                    = $ClusterInformations.OtherIdentifyingInfo;
        'MaxNumberOfNodes'                        = $ClusterInformations.MaxNumberOfNodes;
        'AddEvictDelay'                           = $ClusterInformations.AddEvictDelay;
        'AdminAccessPoint'                        = $ClusterInformations.AdminAccessPoint;
        'AdminExtensions'                         = @();
        'AutoAssignNodeSite'                      = $ClusterInformations.AutoAssignNodeSite;
        'AutoBalancerLevel'                       = $ClusterInformations.AutoBalancerLevel;
        'AutoBalancerMode'                        = $ClusterInformations.AutoBalancerMode;
        'BackupInProgress'                        = $ClusterInformations.BackupInProgress;
        'BlockCacheSize'                          = $ClusterInformations.BlockCacheSize;
        'ClusSvcHangTimeout'                      = $ClusterInformations.ClusSvcHangTimeout;
        'ClusSvcRegroupOpeningTimeout'            = $ClusterInformations.ClusSvcRegroupOpeningTimeout;
        'ClusSvcRegroupPruningTimeout'            = $ClusterInformations.ClusSvcRegroupPruningTimeout;
        'ClusSvcRegroupStageTimeout'              = $ClusterInformations.ClusSvcRegroupStageTimeout;
        'ClusSvcRegroupTickInMilliseconds'        = $ClusterInformations.ClusSvcRegroupTickInMilliseconds;
        'ClusterEnforcedAntiAffinity'             = $ClusterInformations.ClusterEnforcedAntiAffinity;
        'ClusterFunctionalLevel'                  = $ClusterInformations.ClusterFunctionalLevel;
        'ClusterGroupWaitDelay'                   = $ClusterInformations.ClusterGroupWaitDelay;
        'ClusterLogLevel'                         = $ClusterInformations.ClusterLogLevel;
        'ClusterLogSize'                          = $ClusterInformations.ClusterLogSize;
        'ClusterUpgradeVersion'                   = $ClusterInformations.ClusterUpgradeVersion;
        'CrossSiteDelay'                          = $ClusterInformations.CrossSiteDelay;
        'CrossSiteThreshold'                      = $ClusterInformations.CrossSiteThreshold;
        'CrossSubnetDelay'                        = $ClusterInformations.CrossSubnetDelay;
        'CrossSubnetThreshold'                    = $ClusterInformations.CrossSubnetThreshold;
        'CsvBalancer'                             = $ClusterInformations.CsvBalancer;
        'DatabaseReadWriteMode'                   = $ClusterInformations.DatabaseReadWriteMode;
        'DefaultNetworkRole'                      = $ClusterInformations.DefaultNetworkRole;
        'DetectedCloudPlatform'                   = $ClusterInformations.DetectedCloudPlatform;
        'DetectManagedEvents'                     = $ClusterInformations.DetectManagedEvents;
        'DetectManagedEventsThreshold'            = $ClusterInformations.DetectManagedEventsThreshold;
        'DisableGroupPreferredOwnerRandomization' = $ClusterInformations.DisableGroupPreferredOwnerRandomization;
        'DrainOnShutdown'                         = $ClusterInformations.DrainOnShutdown;
        'DumpPolicy'                              = $ClusterInformations.DumpPolicy;
        'DynamicQuorumEnabled'                    = $ClusterInformations.DynamicQuorumEnabled;
        'EnabledEventLogs'                        = @();
        'EnableSharedVolumes'                     = $ClusterInformations.EnableSharedVolumes;
        'FixQuorum'                               = $ClusterInformations.FixQuorum;
        'Fqdn'                                    = $ClusterInformations.Fqdn;
        'GracePeriodEnabled'                      = $ClusterInformations.GracePeriodEnabled;
        'GracePeriodTimeout'                      = $ClusterInformations.GracePeriodTimeout;
        'GroupAdminExtensions'                    = @();
        'GroupDependencyTimeout'                  = $ClusterInformations.GroupDependencyTimeout;
        'HangRecoveryAction'                      = $ClusterInformations.HangRecoveryAction;
        'IgnorePersistentStateOnStartup'          = $ClusterInformations.IgnorePersistentStateOnStartup;
        'LogResourceControls'                     = $ClusterInformations.LogResourceControls;
        'LowerQuorumPriorityNodeId'               = $ClusterInformations.LowerQuorumPriorityNodeId;
        'MaintenanceFile'                         = $ClusterInformations.MaintenanceFile;
        'MessageBufferLength'                     = $ClusterInformations.MessageBufferLength;
        'MinimumNeverPreemptPriority'             = $ClusterInformations.MinimumNeverPreemptPriority;
        'MinimumPreemptorPriority'                = $ClusterInformations.MinimumPreemptorPriority;
        'NetftIPSecEnabled'                       = $ClusterInformations.NetftIPSecEnabled;
        'NetworkAdminExtensions'                  = @();
        'NetworkInterfaceAdminExtensions'         = @();
        'NetworkPriorities'                       = $ClusterInformations.NetworkPriorities;
        'NodeAdminExtensions'                     = @();
        'PlacementOptions'                        = $ClusterInformations.PlacementOptions;
        'PlumbAllCrossSubnetRoutes'               = $ClusterInformations.PlumbAllCrossSubnetRoutes;
        'PreferredSite'                           = $ClusterInformations.PreferredSite;
        'PreventQuorum'                           = $ClusterInformations.PreventQuorum;
        'PrivateProperties'                       = $ClusterInformations.PrivateProperties;
        'QuarantineDuration'                      = $ClusterInformations.QuarantineDuration;
        'QuarantineThreshold'                     = $ClusterInformations.QuarantineThreshold;
        'QuorumArbitrationTimeMax'                = $ClusterInformations.QuorumArbitrationTimeMax;
        'QuorumArbitrationTimeMin'                = $ClusterInformations.QuorumArbitrationTimeMin;
        'QuorumLogFileSize'                       = $ClusterInformations.QuorumLogFileSize;
        'QuorumPath'                              = $ClusterInformations.QuorumPath;
        'QuorumType'                              = $ClusterInformations.QuorumType;
        'QuorumTypeValue'                         = $ClusterInformations.QuorumTypeValue;
        'RecentEventsResetTime'                   = $ClusterInformations.RecentEventsResetTime;
        'RequestReplyTimeout'                     = $ClusterInformations.RequestReplyTimeout;
        'ResiliencyDefaultPeriod'                 = $ClusterInformations.ResiliencyDefaultPeriod;
        'ResiliencyLevel'                         = $ClusterInformations.ResiliencyLevel;
        'ResourceAdminExtensions'                 = @();
        'ResourceDllDeadlockPeriod'               = $ClusterInformations.ResourceDllDeadlockPeriod;
        'ResourceTypeAdminExtensions'             = @();
        'RootMemoryReserved'                      = $ClusterInformations.RootMemoryReserved;
        'RouteHistoryLength'                      = $ClusterInformations.RouteHistoryLength;
        'S2DBusTypes'                             = $ClusterInformations.S2DBusTypes;
        'S2DCacheBehavior'                        = $ClusterInformations.S2DCacheBehavior;
        'S2DCacheDesiredState'                    = $ClusterInformations.S2DCacheDesiredState;
        'S2DCacheDeviceModel'                     = @();
        'S2DCacheFlashReservePercent'             = $ClusterInformations.S2DCacheFlashReservePercent;
        'S2DCacheMetadataReserveBytes'            = $ClusterInformations.S2DCacheMetadataReserveBytes;
        'S2DCachePageSizeKBytes'                  = $ClusterInformations.S2DCachePageSizeKBytes;
        'S2DEnabled'                              = $ClusterInformations.S2DEnabled;
        'S2DIOLatencyThreshold'                   = $ClusterInformations.S2DIOLatencyThreshold;
        'S2DOptimizations'                        = $ClusterInformations.S2DOptimizations;
        'SameSubnetDelay'                         = $ClusterInformations.SameSubnetDelay;
        'SameSubnetThreshold'                     = $ClusterInformations.SameSubnetThreshold;
        'Security'                                = @();
        'Security_Descriptor'                     = @();
        'SecurityLevel'                           = $ClusterInformations.SecurityLevel;
        'SecurityLevelForStorage'                 = $ClusterInformations.SecurityLevelForStorage;
        'SharedVolumeCompatibleFilters'           = @();
        'SharedVolumeIncompatibleFilters'         = @();
        'SharedVolumeSecurityDescriptor'          = @();
        'SharedVolumesRoot'                       = $ClusterInformations.SharedVolumesRoot;
        'SharedVolumeVssWriterOperationTimeout'   = $ClusterInformations.SharedVolumeVssWriterOperationTimeout;
        'ShutdownTimeoutInMinutes'                = $ClusterInformations.ShutdownTimeoutInMinutes;
        'UseClientAccessNetworksForSharedVolumes' = $ClusterInformations.UseClientAccessNetworksForSharedVolumes;
        'WitnessDatabaseWriteTimeout'             = $ClusterInformations.WitnessDatabaseWriteTimeout;
        'WitnessDynamicWeight'                    = $ClusterInformations.WitnessDynamicWeight;
        'WitnessRestartInterval'                  = $ClusterInformations.WitnessRestartInterval;
        'PSComputerName'                          = $ClusterInformations.PSComputerName;
    };

    $ClusterData.EnabledEventLogs                = $ClusterInformations.EnabledEventLogs;
    $ClusterData.Security                        = $ClusterInformations.Security.Length;
    $ClusterData.Security_Descriptor             = $ClusterInformations.Security_Descriptor;
    $ClusterData.SharedVolumeCompatibleFilters   = $ClusterInformations.SharedVolumeCompatibleFilters;
    $ClusterData.SharedVolumeIncompatibleFilters = $ClusterInformations.SharedVolumeIncompatibleFilters;
    $ClusterData.SharedVolumeSecurityDescriptor  = $ClusterInformations.SharedVolumeSecurityDescriptor;
    $ClusterData.Roles                           = $ClusterInformations.Roles;
    $ClusterData.Dedicated                       = $ClusterInformations.Dedicated;
    $ClusterData.NetworkInterfaceAdminExtensions = $ClusterInformations.NetworkInterfaceAdminExtensions;
    $ClusterData.NetworkAdminExtensions          = $ClusterInformations.NetworkAdminExtensions;
    $ClusterData.ResourceTypeAdminExtensions     = $ClusterInformations.ResourceTypeAdminExtensions;
    $ClusterData.ResourceAdminExtensions         = $ClusterInformations.ResourceAdminExtensions;
    $ClusterData.NodeAdminExtensions             = $ClusterInformations.NodeAdminExtensions;
    $ClusterData.GroupAdminExtensions            = $ClusterInformations.GroupAdminExtensions;
    $ClusterData.AdminExtensions                 = $ClusterInformations.AdminExtensions;
    $ClusterData.S2DCacheDeviceModel             = $ClusterInformations.S2DCacheDeviceModel;

    return $ClusterData;
}
