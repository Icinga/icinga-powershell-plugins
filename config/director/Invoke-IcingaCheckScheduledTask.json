{"DataList":{"IcingaCheckScheduledTask Verbosity":{"list_name":"IcingaCheckScheduledTask Verbosity","originalId":"2","entries":[{"allowed_roles":null,"entry_value":"0","entry_name":"0","format":"string"},{"allowed_roles":null,"entry_value":"1","entry_name":"1","format":"string"},{"allowed_roles":null,"entry_value":"2","entry_name":"2","format":"string"},{"allowed_roles":null,"entry_value":"3","entry_name":"3","format":"string"}],"owner":"cstein"},"IcingaCheckScheduledTask State":{"list_name":"IcingaCheckScheduledTask State","originalId":"2","entries":[{"allowed_roles":null,"entry_value":"Unknown","entry_name":"Unknown","format":"string"},{"allowed_roles":null,"entry_value":"Disabled","entry_name":"Disabled","format":"string"},{"allowed_roles":null,"entry_value":"Queued","entry_name":"Queued","format":"string"},{"allowed_roles":null,"entry_value":"Ready","entry_name":"Ready","format":"string"},{"allowed_roles":null,"entry_value":"Running","entry_name":"Running","format":"string"}],"owner":"cstein"},"PowerShell ExecutionPolicies":{"list_name":"PowerShell ExecutionPolicies","originalId":"2","entries":[{"allowed_roles":null,"entry_value":"AllSigned","entry_name":"AllSigned","format":"string"},{"allowed_roles":null,"entry_value":"Bypass","entry_name":"Bypass","format":"string"},{"allowed_roles":null,"entry_value":"Default","entry_name":"Default","format":"string"},{"allowed_roles":null,"entry_value":"RemoteSigned","entry_name":"RemoteSigned","format":"string"},{"allowed_roles":null,"entry_value":"Restricted","entry_name":"Restricted","format":"string"},{"allowed_roles":null,"entry_value":"Undefined","entry_name":"Undefined","format":"string"},{"allowed_roles":null,"entry_value":"Unrestricted","entry_name":"Unrestricted","format":"string"}],"owner":"cstein"}},"Command":{"PowerShell Base":{"methods_execute":"PluginCheck","object_name":"PowerShell Base","vars":{"IcingaPowerShellBase_String_ExecutionPolicy":"ByPass"},"is_string":null,"command":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","zone":null,"disabled":false,"fields":[{"datafield_id":2,"is_required":"n","var_filter":null}],"arguments":{"-C":{"value":"try { Use-Icinga -Minimal; } catch { Write-Output \u0027The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details\u0027; Write-Output \u0027Error:\u0027 $$($$_.Exception.Message)Components:`r`n$$( Get-Module -ListAvailable \u0027icinga-powershell-*\u0027 )`r`n\u0027Module-Path:\u0027`r`n$$($$Env:PSModulePath); exit 3; }; Exit-IcingaExecutePlugin -Command \u0027$ifw_api_command$\u0027 ","order":"0"},"-ExecutionPolicy":{"value":"$IcingaPowerShellBase_String_ExecutionPolicy$","order":"-1"},"-NoProfile":{"value":"-NoProfile","skip_key":true,"order":"-3"},"-NoLogo":{"value":"-NoLogo","skip_key":true,"order":"-2"}},"imports":[],"object_type":"object","timeout":"180"},"Invoke-IcingaCheckScheduledTask":{"fields":[{"datafield_id":4,"is_required":"n","var_filter":null},{"datafield_id":5,"is_required":"n","var_filter":null},{"datafield_id":6,"is_required":"n","var_filter":null},{"datafield_id":7,"is_required":"n","var_filter":null},{"datafield_id":8,"is_required":"n","var_filter":null},{"datafield_id":9,"is_required":"n","var_filter":null},{"datafield_id":10,"is_required":"n","var_filter":null},{"datafield_id":11,"is_required":"n","var_filter":null},{"datafield_id":12,"is_required":"n","var_filter":null},{"datafield_id":13,"is_required":"n","var_filter":null},{"datafield_id":14,"is_required":"n","var_filter":null},{"datafield_id":15,"is_required":"n","var_filter":null},{"datafield_id":16,"is_required":"n","var_filter":null}],"object_name":"Invoke-IcingaCheckScheduledTask","arguments":{"-WarningNextRunTime":{"set_if":"var str = macro(\"$IcingaCheckScheduledTask_String_WarningNextRunTime$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckScheduledTask_String_WarningNextRunTime$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"9"},"-CriticalNextRunTime":{"set_if":"var str = macro(\"$IcingaCheckScheduledTask_String_CriticalNextRunTime$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckScheduledTask_String_CriticalNextRunTime$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"10"},"-NoPerfData":{"set_if":"$IcingaCheckScheduledTask_Switchparameter_NoPerfData$","set_if_format":"string","order":"99"},"-ThresholdInterval":{"set_if":"var str = macro(\"$IcingaCheckScheduledTask_String_ThresholdInterval$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckScheduledTask_String_ThresholdInterval$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"100"},"-WarningMissedRuns":{"value":"$IcingaCheckScheduledTask_Object_WarningMissedRuns$","order":"5"},"-IgnoreLastRunTime":{"set_if":"$IcingaCheckScheduledTask_Switchparameter_IgnoreLastRunTime$","set_if_format":"string","order":"99"},"-TaskName":{"value":{"body":"var arr = macro(\"$IcingaCheckScheduledTask_Array_TaskName$\");\r\n\r\nif (len(arr) == 0) {\r\n    return \"@()\";\r\n}\r\n\r\nvar psarr = arr.map(\r\n    x =\u003e if (typeof(x) == String) {\r\n        var argLen = len(x);\r\n        if (argLen != 0 \u0026\u0026 x.substr(0,1) == \"\u0027\" \u0026\u0026 x.substr(argLen - 1, argLen) == \"\u0027\") {\r\n            x;\r\n        } else {\r\n            \"\u0027\" + x + \"\u0027\";\r\n        }\r\n    } else {\r\n        x;\r\n    }\r\n).join(\",\");\r\n\r\nreturn \"@(\" + psarr + \")\";","type":"Function"},"order":"2"},"-CriticalLastRunTime":{"set_if":"var str = macro(\"$IcingaCheckScheduledTask_String_CriticalLastRunTime$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckScheduledTask_String_CriticalLastRunTime$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"8"},"-IgnoreExitCodes":{"value":{"body":"var arr = macro(\"$IcingaCheckScheduledTask_Array_IgnoreExitCodes$\");\r\n\r\nif (len(arr) == 0) {\r\n    return \"@()\";\r\n}\r\n\r\nvar psarr = arr.map(\r\n    x =\u003e if (typeof(x) == String) {\r\n        var argLen = len(x);\r\n        if (argLen != 0 \u0026\u0026 x.substr(0,1) == \"\u0027\" \u0026\u0026 x.substr(argLen - 1, argLen) == \"\u0027\") {\r\n            x;\r\n        } else {\r\n            \"\u0027\" + x + \"\u0027\";\r\n        }\r\n    } else {\r\n        x;\r\n    }\r\n).join(\",\");\r\n\r\nreturn \"@(\" + psarr + \")\";","type":"Function"},"order":"4"},"-CriticalMissedRuns":{"value":"$IcingaCheckScheduledTask_Object_CriticalMissedRuns$","order":"6"},"-State":{"value":{"body":"var arr = macro(\"$IcingaCheckScheduledTask_Array_State$\");\r\n\r\nif (len(arr) == 0) {\r\n    return \"@()\";\r\n}\r\n\r\nvar psarr = arr.map(\r\n    x =\u003e if (typeof(x) == String) {\r\n        var argLen = len(x);\r\n        if (argLen != 0 \u0026\u0026 x.substr(0,1) == \"\u0027\" \u0026\u0026 x.substr(argLen - 1, argLen) == \"\u0027\") {\r\n            x;\r\n        } else {\r\n            \"\u0027\" + x + \"\u0027\";\r\n        }\r\n    } else {\r\n        x;\r\n    }\r\n).join(\",\");\r\n\r\nreturn \"@(\" + psarr + \")\";","type":"Function"},"order":"3"},"-Verbosity":{"value":"$IcingaCheckScheduledTask_Int32_Verbosity$","order":"11"},"-WarningLastRunTime":{"set_if":"var str = macro(\"$IcingaCheckScheduledTask_String_WarningLastRunTime$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckScheduledTask_String_WarningLastRunTime$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"7"}},"imports":["PowerShell Base"],"object_type":"object","vars":{"IcingaCheckScheduledTask_Switchparameter_IgnoreLastRunTime":false,"ifw_api_arguments":{"CriticalNextRunTime":{"value":"$IcingaCheckScheduledTask_String_CriticalNextRunTime$"},"ThresholdInterval":{"value":"$IcingaCheckScheduledTask_String_ThresholdInterval$"},"TaskName":{"value":"$IcingaCheckScheduledTask_Array_TaskName$"},"WarningMissedRuns":{"value":"$IcingaCheckScheduledTask_Object_WarningMissedRuns$"},"WarningNextRunTime":{"value":"$IcingaCheckScheduledTask_String_WarningNextRunTime$"},"CriticalLastRunTime":{"value":"$IcingaCheckScheduledTask_String_CriticalLastRunTime$"},"CriticalMissedRuns":{"value":"$IcingaCheckScheduledTask_Object_CriticalMissedRuns$"},"IgnoreLastRunTime":{"set_if":"$IcingaCheckScheduledTask_Switchparameter_IgnoreLastRunTime$"},"IgnoreExitCodes":{"value":"$IcingaCheckScheduledTask_Array_IgnoreExitCodes$"},"WarningLastRunTime":{"value":"$IcingaCheckScheduledTask_String_WarningLastRunTime$"},"State":{"value":"$IcingaCheckScheduledTask_Array_State$"},"NoPerfData":{"set_if":"$IcingaCheckScheduledTask_Switchparameter_NoPerfData$"},"Verbosity":{"value":"$IcingaCheckScheduledTask_Int32_Verbosity$"}},"ifw_api_command":"Invoke-IcingaCheckScheduledTask","IcingaCheckScheduledTask_Switchparameter_NoPerfData":false}}},"Datafield":{"16":{"settings":{"datalist":"IcingaCheckScheduledTask Verbosity","behavior":"strict","data_type":"string"},"description":"Changes the behavior of the plugin output which check states are printed:\n0 (default): Only service checks/packages with state not OK will be printed\n1: Only services with not OK will be printed including OK checks of affected check packages including Package config\n2: Everything will be printed regardless of the check state\n3: Identical to Verbose 2, but prints in addition the check package configuration e.g (All must be [OK])","caption":"Verbosity","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeDatalist","originalId":"16","varname":"IcingaCheckScheduledTask_Int32_Verbosity","format":null},"7":{"settings":{"visibility":"visible"},"description":"A list of exit codes which will be considered as [OK]. By default every task which did not exit with 0 will be handled as critical.","caption":"IgnoreExitCodes","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeArray","originalId":"7","varname":"IcingaCheckScheduledTask_Array_IgnoreExitCodes","format":null},"5":{"settings":{"visibility":"visible"},"description":"A list of tasks to check for. If your tasks contain spaces, wrap them around a \u0027 to ensure they are\nproperly handled as string","caption":"TaskName","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeArray","originalId":"5","varname":"IcingaCheckScheduledTask_Array_TaskName","format":null},"12":{"settings":{"visibility":"visible"},"description":"Allows to specify a time interval, on which the check will return warning based on the next run time\nof a task and the current time. The NextRunTime is an offset of the next time the task will run to the current time, therefore increasing over time.\nNegative NextRunTime values mean the task is scheduled in the future\n\nValues have to be specified as time units like, 10m, 1d, 1w, 2M, 1y","caption":"WarningNextRunTime","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"12","varname":"IcingaCheckScheduledTask_String_WarningNextRunTime","format":null},"10":{"settings":{"visibility":"visible"},"description":"Allows to specify a time interval, on which the check will return warning based on the last run time\nof a task and the current time. The LastRunTime is an offset of the last time the task run to the current time, therefore increasing over time\n\nValues have to be specified as time units like, 10m, 1d, 1w, 2M, 1y","caption":"WarningLastRunTime","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"10","varname":"IcingaCheckScheduledTask_String_WarningLastRunTime","format":null},"2":{"settings":{"datalist":"PowerShell ExecutionPolicies","behavior":"strict","data_type":"string"},"description":"Defines with which Execution Policy the PowerShell is started","caption":"PowerShell Execution Policy","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeDatalist","originalId":"2","varname":"IcingaPowerShellBase_String_ExecutionPolicy","format":null},"8":{"settings":{"visibility":"visible"},"description":"Defines a warning threshold for missed runs for filtered tasks.\n\nSupports Icinga default threshold syntax.","caption":"WarningMissedRuns","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"8","varname":"IcingaCheckScheduledTask_Object_WarningMissedRuns","format":null},"11":{"settings":{"visibility":"visible"},"description":"Allows to specify a time interval, on which the check will return critical based on the last run time\nof a task and the current time. The LastRunTime is an offset of the last time the task run to the current time, therefore increasing over time\n\nValues have to be specified as time units like, 10m, 1d, 1w, 2M, 1y","caption":"CriticalLastRunTime","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"11","varname":"IcingaCheckScheduledTask_String_CriticalLastRunTime","format":null},"9":{"settings":{"visibility":"visible"},"description":"Defines a critical threshold for missed runs for filtered tasks.\n\nSupports Icinga default threshold syntax.","caption":"CriticalMissedRuns","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"9","varname":"IcingaCheckScheduledTask_Object_CriticalMissedRuns","format":null},"14":{"settings":{"visibility":"visible"},"description":"By default every task which did not exit with 0 will be handled as critical. If you set this flag,\nthe exit code of the task is ignored during check execution","caption":"IgnoreLastRunTime","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeBoolean","originalId":"14","varname":"IcingaCheckScheduledTask_Switchparameter_IgnoreLastRunTime","format":null},"15":{"settings":{"visibility":"visible"},"description":"Set this argument to not write any performance data","caption":"NoPerfData","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeBoolean","originalId":"15","varname":"IcingaCheckScheduledTask_Switchparameter_NoPerfData","format":null},"6":{"settings":{"datalist":"IcingaCheckScheduledTask State","behavior":"strict","data_type":"array"},"description":"The state a task should currently have for the plugin to return [OK]","caption":"State","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeDatalist","originalId":"6","varname":"IcingaCheckScheduledTask_Array_State","format":null},"4":{"settings":{"visibility":"visible"},"description":"Change the value your defined threshold checks against from the current value to a collected time threshold of the Icinga for Windows daemon, as described here: https://icinga.com/docs/icinga-for-windows/latest/doc/110-Installation/06-Collect-Metrics-over-Time/ An example for this argument would be 1m or 15m which will use the average of 1m or 15m for monitoring.","caption":"ThresholdInterval","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"4","varname":"IcingaCheckScheduledTask_String_ThresholdInterval","format":null},"13":{"settings":{"visibility":"visible"},"description":"Allows to specify a time interval, on which the check will return critical based on the next run time\nof a task and the current time. The NextRunTime is an offset of the next time the task will run to the current time, therefore increasing over time.\nNegative NextRunTime values mean the task is scheduled in the future\n\nValues have to be specified as time units like, 10m, 1d, 1w, 2M, 1y","caption":"CriticalNextRunTime","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"13","varname":"IcingaCheckScheduledTask_String_CriticalNextRunTime","format":null}}}
