{"DataList":{"IcingaCheckTimeSync Verbosity":{"list_name":"IcingaCheckTimeSync Verbosity","originalId":"2","entries":[{"allowed_roles":null,"entry_value":"0","entry_name":"0","format":"string"},{"allowed_roles":null,"entry_value":"1","entry_name":"1","format":"string"},{"allowed_roles":null,"entry_value":"2","entry_name":"2","format":"string"},{"allowed_roles":null,"entry_value":"3","entry_name":"3","format":"string"}],"owner":"stein"},"PowerShell ExecutionPolicies":{"list_name":"PowerShell ExecutionPolicies","originalId":"2","entries":[{"allowed_roles":null,"entry_value":"AllSigned","entry_name":"AllSigned","format":"string"},{"allowed_roles":null,"entry_value":"Bypass","entry_name":"Bypass","format":"string"},{"allowed_roles":null,"entry_value":"Default","entry_name":"Default","format":"string"},{"allowed_roles":null,"entry_value":"RemoteSigned","entry_name":"RemoteSigned","format":"string"},{"allowed_roles":null,"entry_value":"Restricted","entry_name":"Restricted","format":"string"},{"allowed_roles":null,"entry_value":"Undefined","entry_name":"Undefined","format":"string"},{"allowed_roles":null,"entry_value":"Unrestricted","entry_name":"Unrestricted","format":"string"}],"owner":"stein"}},"Command":{"Invoke-IcingaCheckTimeSync":{"fields":[{"datafield_id":4,"is_required":"n","var_filter":null},{"datafield_id":5,"is_required":"n","var_filter":null},{"datafield_id":6,"is_required":"n","var_filter":null},{"datafield_id":7,"is_required":"n","var_filter":null},{"datafield_id":8,"is_required":"n","var_filter":null},{"datafield_id":9,"is_required":"n","var_filter":null},{"datafield_id":10,"is_required":"n","var_filter":null},{"datafield_id":11,"is_required":"n","var_filter":null},{"datafield_id":12,"is_required":"n","var_filter":null},{"datafield_id":13,"is_required":"n","var_filter":null},{"datafield_id":14,"is_required":"n","var_filter":null}],"object_name":"Invoke-IcingaCheckTimeSync","arguments":{"-C":{"value":"try { Use-Icinga -Minimal; } catch { Write-Output \u0027The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details\u0027; Write-Output \u0027Error:\u0027 $$($$_.Exception.Message)Components:`r`n$$( Get-Module -ListAvailable \u0027icinga-powershell-*\u0027 )`r`n\u0027Module-Path:\u0027`r`n$$($$Env:PSModulePath); exit 3; }; Exit-IcingaExecutePlugin -Command \u0027Invoke-IcingaCheckTimeSync\u0027 ","order":"0"},"-Verbosity":{"value":"$IcingaCheckTimeSync_Int32_Verbosity$","order":"8"},"-Warning":{"value":"$IcingaCheckTimeSync_Object_Warning$","order":"4"},"-Timeout":{"value":"$IcingaCheckTimeSync_Int32_Timeout$","order":"6"},"-Port":{"value":"$IcingaCheckTimeSync_Int32_Port$","order":"7"},"-IgnoreService":{"set_if":"$IcingaCheckTimeSync_Switchparameter_IgnoreService$","set_if_format":"string","order":"99"},"-NoPerfData":{"set_if":"$IcingaCheckTimeSync_Switchparameter_NoPerfData$","set_if_format":"string","order":"99"},"-Critical":{"value":"$IcingaCheckTimeSync_Object_Critical$","order":"5"},"-Server":{"set_if":"var str = macro(\"$IcingaCheckTimeSync_String_Server$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckTimeSync_String_Server$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"2"},"-TimeOffset":{"value":"$IcingaCheckTimeSync_Object_TimeOffset$","order":"3"},"-IPV4":{"set_if":"$IcingaCheckTimeSync_Switchparameter_IPV4$","set_if_format":"string","order":"99"},"-ThresholdInterval":{"set_if":"var str = macro(\"$IcingaCheckTimeSync_String_ThresholdInterval$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckTimeSync_String_ThresholdInterval$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"100"}},"imports":["PowerShell Base"],"object_type":"object","vars":{"IcingaCheckTimeSync_Switchparameter_NoPerfData":false,"IcingaCheckTimeSync_Switchparameter_IPV4":false,"IcingaCheckTimeSync_Switchparameter_IgnoreService":false}},"PowerShell Base":{"methods_execute":"PluginCheck","object_name":"PowerShell Base","vars":{"IcingaPowerShellBase_String_ExecutionPolicy":"ByPass"},"is_string":null,"command":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","zone":null,"disabled":false,"fields":[{"datafield_id":2,"is_required":"n","var_filter":null}],"arguments":{"-ExecutionPolicy":{"value":"$IcingaPowerShellBase_String_ExecutionPolicy$","order":"-1"},"-NoProfile":{"set_if":true,"order":"-3"},"-NoLogo":{"set_if":true,"order":"-2"}},"imports":[],"object_type":"object","timeout":"180"}},"Datafield":{"7":{"settings":{"visibility":"visible"},"description":"Used to specify a offset Warning threshold e.g 10ms or 0.01s","caption":"Warning","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"7","varname":"IcingaCheckTimeSync_Object_Warning","format":null},"9":{"settings":{"visibility":"visible"},"description":"Seconds before connection times out (default: 10)","caption":"Timeout","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeNumber","originalId":"9","varname":"IcingaCheckTimeSync_Int32_Timeout","format":null},"10":{"settings":{"visibility":"visible"},"description":"Use IPV4 connection. Default $FALSE","caption":"IPV4","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeBoolean","originalId":"10","varname":"IcingaCheckTimeSync_Switchparameter_IPV4","format":null},"12":{"settings":{"visibility":"visible"},"description":"Ignores the W32Time service during check execution and will not throw warning or critical in case the service is not running","caption":"IgnoreService","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeBoolean","originalId":"12","varname":"IcingaCheckTimeSync_Switchparameter_IgnoreService","format":null},"11":{"settings":{"visibility":"visible"},"description":"Port number (default: 123)","caption":"Port","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeNumber","originalId":"11","varname":"IcingaCheckTimeSync_Int32_Port","format":null},"2":{"settings":{"datalist":"PowerShell ExecutionPolicies","behavior":"strict","data_type":"string"},"description":"Defines with which Execution Policy the PowerShell is started","caption":"PowerShell Execution Policy","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeDatalist","originalId":"2","varname":"IcingaPowerShellBase_String_ExecutionPolicy","format":null},"14":{"settings":{"datalist":"IcingaCheckTimeSync Verbosity","behavior":"strict","data_type":"string"},"description":"Changes the behavior of the plugin output which check states are printed:\n0 (default): Only service checks/packages with state not OK will be printed\n1: Only services with not OK will be printed including OK checks of affected check packages including Package config\n2: Everything will be printed regardless of the check state\n3: Identical to Verbose 2, but prints in addition the check package configuration e.g (All must be [OK])","caption":"Verbosity","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeDatalist","originalId":"14","varname":"IcingaCheckTimeSync_Int32_Verbosity","format":null},"4":{"settings":{"visibility":"visible"},"description":"Change the value your defined threshold checks against from the current value to a collected time threshold of the Icinga for Windows daemon, as described here: https://icinga.com/docs/icinga-for-windows/latest/doc/service/10-Register-Service-Checks/ An example for this argument would be 1m or 15m which will use the average of 1m or 15m for monitoring.","caption":"ThresholdInterval","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"4","varname":"IcingaCheckTimeSync_String_ThresholdInterval","format":null},"13":{"settings":{"visibility":"visible"},"description":null,"caption":"NoPerfData","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeBoolean","originalId":"13","varname":"IcingaCheckTimeSync_Switchparameter_NoPerfData","format":null},"6":{"settings":{"visibility":"visible"},"description":"The maximum acceptable offset between the local clock and the NTP Server, in seconds e.g. if you allow up to 0.5s timeoffset you can also enter 500ms.\nInvoke-IcingaCheckTimeSync will return OK, if there is no difference between them,\nWARNING, if the time difference exceeds the Warning threshold,\nCRITICAL, if the time difference exceeds the Critical threshold.","caption":"TimeOffset","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"6","varname":"IcingaCheckTimeSync_Object_TimeOffset","format":null},"5":{"settings":{"visibility":"visible"},"description":"The NTP Server you want to connect to.","caption":"Server","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"5","varname":"IcingaCheckTimeSync_String_Server","format":null},"8":{"settings":{"visibility":"visible"},"description":"Used to specify a offset Critical threshold e.g 20ms or 0.02s.","caption":"Critical","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"8","varname":"IcingaCheckTimeSync_Object_Critical","format":null}}}
