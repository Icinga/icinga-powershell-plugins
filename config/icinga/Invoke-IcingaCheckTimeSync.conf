object CheckCommand "Invoke-IcingaCheckTimeSync" {
    import "PowerShell Base"

    arguments += {
        "-C" = {
            value = "try { Use-Icinga -Minimal; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; Write-Output 'Error:' $$($$_.Exception.Message)Components:`r`n$$( Get-Module -ListAvailable 'icinga-powershell-*' )`r`n'Module-Path:'`r`n$$($$Env:PSModulePath); exit 3; }; Exit-IcingaExecutePlugin -Command 'Invoke-IcingaCheckTimeSync' "
            order = 0
        }
        "-Verbosity" = {
            description = "Changes the behavior of the plugin output which check states are printed: 0 (default): Only service checks/packages with state not OK will be printed 1: Only services with not OK will be printed including OK checks of affected check packages including Package config 2: Everything will be printed regardless of the check state 3: Identical to Verbose 2, but prints in addition the check package configuration e.g (All must be [OK])"
            value = "$IcingaCheckTimeSync_Int32_Verbosity$"
            order = 8
        }
        "-Warning" = {
            description = "Used to specify a offset Warning threshold e.g 10ms or 0.01s"
            value = "$IcingaCheckTimeSync_Object_Warning$"
            order = 4
        }
        "-Timeout" = {
            description = "Seconds before connection times out (default: 10)"
            value = "$IcingaCheckTimeSync_Int32_Timeout$"
            order = 6
        }
        "-Port" = {
            description = "Port number (default: 123)"
            value = "$IcingaCheckTimeSync_Int32_Port$"
            order = 7
        }
        "-IgnoreService" = {
            set_if = "$IcingaCheckTimeSync_Switchparameter_IgnoreService$"
            order = 99
        }
        "-NoPerfData" = {
            set_if = "$IcingaCheckTimeSync_Switchparameter_NoPerfData$"
            order = 99
        }
        "-Critical" = {
            description = "Used to specify a offset Critical threshold e.g 20ms or 0.02s."
            value = "$IcingaCheckTimeSync_Object_Critical$"
            order = 5
        }
        "-Server" = {
            set_if = {{
                var str = macro("$IcingaCheckTimeSync_String_Server$"); if (len(str) == 0) { return false; }; return true;
            }}
            description = "The NTP Server you want to connect to."
            value = {{
                var str = macro("$IcingaCheckTimeSync_String_Server$");
                var argLen = len(str);
                if (argLen == 0) {
                    return;
                }
                if (argLen != 0 && str.substr(0,1) == "'" && str.substr(argLen - 1, argLen) == "'") {
                    return str;
                }
                return ("'" + str + "'");
            }}
            order = 2
        }
        "-TimeOffset" = {
            description = "The maximum acceptable offset between the local clock and the NTP Server, in seconds e.g. if you allow up to 0.5s timeoffset you can also enter 500ms. Invoke-IcingaCheckTimeSync will return OK, if there is no difference between them, WARNING, if the time difference exceeds the Warning threshold, CRITICAL, if the time difference exceeds the Critical threshold."
            value = "$IcingaCheckTimeSync_Object_TimeOffset$"
            order = 3
        }
        "-IPV4" = {
            set_if = "$IcingaCheckTimeSync_Switchparameter_IPV4$"
            order = 99
        }
        "-ThresholdInterval" = {
            set_if = {{
                var str = macro("$IcingaCheckTimeSync_String_ThresholdInterval$"); if (len(str) == 0) { return false; }; return true;
            }}
            description = "Change the value your defined threshold checks against from the current value to a collected time threshold of the Icinga for Windows daemon, as described here: https://icinga.com/docs/icinga-for-windows/latest/doc/service/10-Register-Service-Checks/ An example for this argument would be 1m or 15m which will use the average of 1m or 15m for monitoring."
            value = {{
                var str = macro("$IcingaCheckTimeSync_String_ThresholdInterval$");
                var argLen = len(str);
                if (argLen == 0) {
                    return;
                }
                if (argLen != 0 && str.substr(0,1) == "'" && str.substr(argLen - 1, argLen) == "'") {
                    return str;
                }
                return ("'" + str + "'");
            }}
            order = 100
        }
    }
    vars.IcingaCheckTimeSync_Switchparameter_NoPerfData = false
    vars.IcingaCheckTimeSync_Switchparameter_IPV4 = false
    vars.IcingaCheckTimeSync_Switchparameter_IgnoreService = false
}
