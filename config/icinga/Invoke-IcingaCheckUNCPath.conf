object CheckCommand "Invoke-IcingaCheckUNCPath" {
    import "PowerShell Base"

    arguments += {
        "-Path" = {
            set_if = {{
                var str = macro("$IcingaCheckUNCPath_String_Path$"); if (len(str) == 0) { return false; }; return true;
            }}
            description = "The path to a volume or network share you want to monitor, like '\\\\example.com\\Home' or 'C:\\ClusterSharedVolume\\Volume1'"
            value = {{
                var str = macro("$IcingaCheckUNCPath_String_Path$");
                var argLen = len(str);
                if (argLen == 0) {
                    return;
                }
                if (argLen != 0 && str.substr(0,1) == "'" && str.substr(argLen - 1, argLen) == "'") {
                    return str;
                }
                return ("'" + str + "'");
            }}
            order = 2
        }
        "-DisplayAlias" = {
            set_if = {{
                var str = macro("$IcingaCheckUNCPath_String_DisplayAlias$"); if (len(str) == 0) { return false; }; return true;
            }}
            description = "Modifies the plugin output to not display the value provided within the `-Path` argument but to use this string value instead of shorten the output and make it more visual appealing."
            value = {{
                var str = macro("$IcingaCheckUNCPath_String_DisplayAlias$");
                var argLen = len(str);
                if (argLen == 0) {
                    return;
                }
                if (argLen != 0 && str.substr(0,1) == "'" && str.substr(argLen - 1, argLen) == "'") {
                    return str;
                }
                return ("'" + str + "'");
            }}
            order = 5
        }
        "-Verbosity" = {
            description = "Changes the behavior of the plugin output which check states are printed: 0 (default): Only service checks/packages with state not OK will be printed 1: Only services with not OK will be printed including OK checks of affected check packages including Package config 2: Everything will be printed regardless of the check state 3: Identical to Verbose 2, but prints in addition the check package configuration e.g (All must be [OK])"
            value = "$IcingaCheckUNCPath_Object_Verbosity$"
            order = 10
        }
        "-NoPerfData" = {
            set_if = "$IcingaCheckUNCPath_Switchparameter_NoPerfData$"
            order = 99
        }
        "-Password" = {
            description = "The password to authenticate the given user for. Has to be a secure string"
            value = "(ConvertTo-IcingaSecureString '$IcingaCheckUNCPath_Securestring_Password$')"
            order = 4
        }
        "-C" = {
            value = "try { Use-Icinga -Minimal; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; Write-Output 'Error:' $$($$_.Exception.Message)Components:`r`n$$( Get-Module -ListAvailable 'icinga-powershell-*' )`r`n'Module-Path:'`r`n$$($$Env:PSModulePath); exit 3; }; Exit-IcingaExecutePlugin -Command 'Invoke-IcingaCheckUNCPath' "
            order = 0
        }
        "-ThresholdInterval" = {
            set_if = {{
                var str = macro("$IcingaCheckUNCPath_String_ThresholdInterval$"); if (len(str) == 0) { return false; }; return true;
            }}
            description = "Change the value your defined threshold checks against from the current value to a collected time threshold of the Icinga for Windows daemon, as described here: https://icinga.com/docs/icinga-for-windows/latest/doc/service/10-Register-Service-Checks/ An example for this argument would be 1m or 15m which will use the average of 1m or 15m for monitoring."
            value = {{
                var str = macro("$IcingaCheckUNCPath_String_ThresholdInterval$");
                var argLen = len(str);
                if (argLen == 0) {
                    return;
                }
                if (argLen != 0 && str.substr(0,1) == "'" && str.substr(argLen - 1, argLen) == "'") {
                    return str;
                }
                return ("'" + str + "'");
            }}
            order = 100
        }
        "-User" = {
            set_if = {{
                var str = macro("$IcingaCheckUNCPath_String_User$"); if (len(str) == 0) { return false; }; return true;
            }}
            description = "Provide a username and/or domain to run this check for. The format can either be 'domain\\user' or 'domain@user'"
            value = {{
                var str = macro("$IcingaCheckUNCPath_String_User$");
                var argLen = len(str);
                if (argLen == 0) {
                    return;
                }
                if (argLen != 0 && str.substr(0,1) == "'" && str.substr(argLen - 1, argLen) == "'") {
                    return str;
                }
                return ("'" + str + "'");
            }}
            order = 3
        }
        "-Critical" = {
            description = "A critical threshold for the shares free space in either % or byte units, like '20%:' or '50GB:' Please note that this value is decreasing over time, therefor you will have to use the plugin handler and add ':' at the end of your input to check for 'current value < threshold' like in the previous example  Allowed units: %, B, KB, MB, GB, TB, PB, KiB, MiB, GiB, TiB, PiB"
            value = "$IcingaCheckUNCPath_Object_Critical$"
            order = 7
        }
        "-WarningTotal" = {
            description = "A warning threshold for the shares total free space in byte units, like '50GB:' Please note that this value is decreasing over time, therefor you will have to use the plugin handler and add ':' at the end of your input to check for 'current value < threshold' like in the previous example  Allowed units: B, KB, MB, GB, TB, PB, KiB, MiB, GiB, TiB, PiB"
            value = "$IcingaCheckUNCPath_Object_WarningTotal$"
            order = 8
        }
        "-Warning" = {
            description = "A warning threshold for the shares free space in either % or byte units, like '20%:' or '50GB:' Please note that this value is decreasing over time, therefor you will have to use the plugin handler and add ':' at the end of your input to check for 'current value < threshold' like in the previous example  Allowed units: %, B, KB, MB, GB, TB, PB, KiB, MiB, GiB, TiB, PiB"
            value = "$IcingaCheckUNCPath_Object_Warning$"
            order = 6
        }
        "-CheckUsedSpace" = {
            set_if = "$IcingaCheckUNCPath_Switchparameter_CheckUsedSpace$"
            order = 99
        }
        "-CriticalTotal" = {
            description = "A warning threshold for the shares total free space in byte units, like '50GB:' Please note that this value is decreasing over time, therefor you will have to use the plugin handler and add ':' at the end of your input to check for 'current value < threshold' like in the previous example  Allowed units: B, KB, MB, GB, TB, PB, KiB, MiB, GiB, TiB, PiB"
            value = "$IcingaCheckUNCPath_Object_CriticalTotal$"
            order = 9
        }
    }
    vars.IcingaCheckUNCPath_Switchparameter_CheckUsedSpace = false
    vars.ifw_api_arguments = {
        "WarningTotal" = {
            value = "$IcingaCheckUNCPath_Object_WarningTotal$"
        }
        "DisplayAlias" = {
            value = "$IcingaCheckUNCPath_String_DisplayAlias$"
        }
        "Path" = {
            value = "$IcingaCheckUNCPath_String_Path$"
        }
        "ThresholdInterval" = {
            value = "$IcingaCheckUNCPath_String_ThresholdInterval$"
        }
        "CriticalTotal" = {
            value = "$IcingaCheckUNCPath_Object_CriticalTotal$"
        }
        "Password" = {
            value = "$IcingaCheckUNCPath_Securestring_Password$"
        }
        "CheckUsedSpace" = {
            set_if = "$IcingaCheckUNCPath_Switchparameter_CheckUsedSpace$"
        }
        "Critical" = {
            value = "$IcingaCheckUNCPath_Object_Critical$"
        }
        "Warning" = {
            value = "$IcingaCheckUNCPath_Object_Warning$"
        }
        "NoPerfData" = {
            set_if = "$IcingaCheckUNCPath_Switchparameter_NoPerfData$"
        }
        "Verbosity" = {
            value = "$IcingaCheckUNCPath_Object_Verbosity$"
        }
        "User" = {
            value = "$IcingaCheckUNCPath_String_User$"
        }
    }
    vars.ifw_api_command = "invoke-icingacheckuncpath"
    vars.IcingaCheckUNCPath_Switchparameter_NoPerfData = false
}
